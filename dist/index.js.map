{"version":3,"file":"index.js","sources":["../src/libs/BasicTable.tsx","../src/index.tsx"],"sourcesContent":["import React from 'react'\n// import axiosApi from '../utils/axios'\nimport { Table } from 'antd'\nimport { ColumnProps } from 'antd/es/table'\n\nexport const BasicTable: any = (props: { url: string, columns: Array<{ label: string, value: string, key: string }>, datas: Array<any> }) => {\n\n  // TODO: columns props로 받아야됨 -> columns : { labels: [], values: {}(default String), valueType: '' }\n  // columns -> title: column.label[0~n], dataIndex: columns.value[0~n], key: columns.values[0~n], width ?, align ?\n  // dataSource -> { `${data.key}`: data.value, key: `${data.key}_index` }\n  const { url, columns, datas } = props\n  console.log('url : ', url)\n\n  const tableColumns: ColumnProps<any>[] = columns.map(ele => { return { title: ele.label, dataIndex: ele.value, key: ele.value, ...ele } })\n  const tableDatas: Array<any> = datas.map((ele, idx) => {\n    let returnData: object = {}\n    for (let key in ele) {\n      if (ele.hasOwnProperty(key)) {\n        returnData = {\n          ...returnData,\n          [key]: ele[key]\n        }\n      }\n    }\n    returnData = {\n      ...returnData,\n      number: idx + 1\n    }\n    return returnData\n  })\n\n  return (\n    <Table columns={tableColumns} dataSource={tableDatas} rowKey={record => record.uid}/>\n  )\n}\n","import React from 'react'\nimport { BasicTable } from './libs/BasicTable'\n\ninterface IProps {\n  text: string\n}\n\nconst App = (props: IProps) => {\n  const { text } = props\n  const columns = [\n    {\n      label: '테스트 컬럼',\n      value: 'test_column',\n      key: 'test_column',\n    },\n    {\n      label: '테스트 컬럼2',\n      value: 'test_column2',\n      key: 'test_column2',\n    },\n    {\n      label: '테스트 컬럼3',\n      value: 'test_column3',\n      key: 'test_column3',\n    }\n  ]\n\n  const datas = [\n    {\n      test_column: '1',\n      test_column2: '2',\n      test_column3: '3'\n    },\n    {\n      test_column: '4',\n      test_column2: '5',\n      test_column3: '6'\n    },\n    {\n      test_column: '7',\n      test_column2: '8',\n      test_column3: '9'\n    },\n  ]\n  return (\n    <div>\n      Hello world { text }\n      <BasicTable\n        url={'https://test.url'}\n        columns={columns}\n        datas={datas}\n      />\n    </div>\n  )\n}\n\nexport default App\n"],"names":["Table"],"mappings":";;;;;;;;;AAKO,MAAM,UAAU,GAAQ,CAAC,KAAwG;;;;IAKtI,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,KAAK,CAAA;IACrC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAA;IAE1B,MAAM,YAAY,GAAuB,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,uBAAS,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,IAAK,GAAG,EAAE,EAAE,CAAC,CAAA;IAC1I,MAAM,UAAU,GAAe,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG;QAChD,IAAI,UAAU,GAAW,EAAE,CAAA;QAC3B,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;YACnB,IAAI,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC3B,UAAU,mCACL,UAAU,KACb,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAChB,CAAA;aACF;SACF;QACD,UAAU,mCACL,UAAU,KACb,MAAM,EAAE,GAAG,GAAG,CAAC,GAChB,CAAA;QACD,OAAO,UAAU,CAAA;KAClB,CAAC,CAAA;IAEF,QACE,oBAACA,UAAK,IAAC,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,IAAI,MAAM,CAAC,GAAG,GAAG,EACtF;AACH,CAAC;;AC3BD,MAAM,GAAG,GAAG,CAAC,KAAa;IACxB,MAAM,EAAE,IAAI,EAAE,GAAG,KAAK,CAAA;IACtB,MAAM,OAAO,GAAG;QACd;YACE,KAAK,EAAE,QAAQ;YACf,KAAK,EAAE,aAAa;YACpB,GAAG,EAAE,aAAa;SACnB;QACD;YACE,KAAK,EAAE,SAAS;YAChB,KAAK,EAAE,cAAc;YACrB,GAAG,EAAE,cAAc;SACpB;QACD;YACE,KAAK,EAAE,SAAS;YAChB,KAAK,EAAE,cAAc;YACrB,GAAG,EAAE,cAAc;SACpB;KACF,CAAA;IAED,MAAM,KAAK,GAAG;QACZ;YACE,WAAW,EAAE,GAAG;YAChB,YAAY,EAAE,GAAG;YACjB,YAAY,EAAE,GAAG;SAClB;QACD;YACE,WAAW,EAAE,GAAG;YAChB,YAAY,EAAE,GAAG;YACjB,YAAY,EAAE,GAAG;SAClB;QACD;YACE,WAAW,EAAE,GAAG;YAChB,YAAY,EAAE,GAAG;YACjB,YAAY,EAAE,GAAG;SAClB;KACF,CAAA;IACD,QACE;;QACgB,IAAI;QAClB,oBAAC,UAAU,IACT,GAAG,EAAE,kBAAkB,EACvB,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,KAAK,GACZ,CACE,EACP;AACH,CAAC,CAAA;;;;"}